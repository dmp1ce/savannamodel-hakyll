name: Build site
run-name: Build site
on: [push]
jobs:
  run-gulp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        uses: actions/setup-node@v3

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: npm install

      - name: Cache Semantic dist
        id: cache-semantic
        uses: actions/cache@v3
        env:
          cache-name: cache-semantic-dist
        with:
          path: semantic/dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('semantic/src/**/*', 'semantic/tasks/**/*', 'semantic/gulpfile.js') }}

      - if: ${{ steps.cache-semantic.outputs.cache-hit != 'true' }}
        name: Build Semantic dist
        working-directory: ./semantic
        run: gulp build

      - name: Tar Semantic dist files
        run: tar -zcvf semantic-dist.tar.gz -C ./semantic dist

      - name: Upload Semantic dist
        uses: actions/upload-artifact@v3
        with:
          name: semantic-dist
          path: semantic-dist.tar.gz

  build-site-executable:
    name: Build site executable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Haskell build
        id: cache-haskell
        uses: actions/cache@v3
        env:
          cache-name: cache-haskell-build
        with:
          path: .stack-work
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('site.hs', 'stack.yaml', 'stack.yaml.lock', 'package.yaml') }}

      - if: ${{ steps.cache-haskell.outputs.cache-hit != 'true' }}
        name: Setup Stack
        uses: haskell/actions/setup@v2
        with:
          ghc-version: '8.8.4'
          enable-stack: true
          stack-version: 'latest'

      - if: ${{ steps.cache-haskell.outputs.cache-hit != 'true' }}
        name: Build Hakyll exectuable
        run: stack build

      - name: Tar .stack-work files
        run: tar -zcvf stack-work.tar.gz .stack-work

      - name: Upload site executable
        uses: actions/upload-artifact@v3
        with:
          name: stack-work
          path: stack-work.tar.gz

  build-site:
    name: Build site using Hakyll
    runs-on: ubuntu-latest
    needs: [run-gulp, build-site-executable]
    steps:
      - uses: actions/checkout@v3

      - name: Download Semantic
        uses: actions/download-artifact@v3
        with:
          name: semantic-dist
          path: /tmp

      - name: Extract Semantic
        run: tar -xvf /tmp/semantic-dist.tar.gz --directory ./semantic

      - name: Download Hakyll (site) executable
        uses: actions/download-artifact@v3
        with:
          name: stack-work
          path: /tmp

      - name: Extract .stack-work
        run: tar -xvf /tmp/stack-work.tar.gz --directory ./

      - name: Cache website build
        id: cache-website
        uses: actions/cache@v3
        env:
          cache-name: cache-website
        with:
          path: _site
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.stack_work/**', 'semantic/dist/**', '*.html', '*.markdown', 'templates/**', 'quotes/**', 'github/**', 'foods/**', 'colors/**') }}

      - name: List directory
        run: tree -a

      - if: ${{ steps.cache-website.outputs.cache-hit != 'true' }}
        name: Build website
        run: stack exec -- site build

      - name: Tar website files
        run: tar -zcvf doc-files.tar.gz _site

      - name: Upload doc files
        uses: actions/upload-artifact@v3
        with:
          name: doc-files
          path: doc-files.tar.gz

  # Update site files and force push to the same named branch
  deploy-website:
    name: Deploy website
    runs-on: ubuntu-latest
    needs: build-site
    steps:
      - uses: actions/checkout@v3
        with:
          repository: dmp1ce/savannamodel-website
          # Get the current branch
          ref: master
          ssh-key: ${{ secrets.LEAKYWORKMAN_SSH_KEY }}
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      #- <make changes and commit >
      #- run: git push origin master

      - name: Download Hakyll (site) executable
        uses: actions/download-artifact@v3
        with:
          name: doc-files
          path: /tmp

      - name: Extract _site
        run: tar -xvf /tmp/doc-files.tar.gz --directory /tmp

      - name: Update website files
        run: ./deploy.sh /tmp

      - name: Git status
        run: git status

      - name: List directory
        run: tree -a

